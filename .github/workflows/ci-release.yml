name: CI by 'release'
on:
  push:
    branches:
      - "release"
      - "release-**"
      - "release/**"
  pull_request:
    branches:
      - "release"
      - "release-**"
      - "release/**"


jobs:

  prep-testbed_unit-test:
#    name: Prepare all unit test items
    uses: ./.github/workflows/prepare_test_items.yaml
    with:
      shell_path: scripts/ci/get-unit-test-paths.sh
      shell_arg: unix


  run_unit-test:
#    name: Run all unit test items
    needs: prep-testbed_unit-test
    uses: ./.github/workflows/run_test_items_via_pytest.yaml
    with:
      test_type: unit-test
      all_test_items_paths: ${{needs.prep-testbed_unit-test.outputs.all_test_items}}


  unit-test_codecov:
#    name: Organize and generate the testing report and upload it to Codecov
    needs: [run_unit-test]
    uses: ./.github/workflows/organize_and_generate_testing_report.yaml
#    uses: ./.github/workflows/upload_test_report_to_codecov.yaml
#    secrets:
#      codecov_token: ${{ secrets.CODECOV_TOKEN }}
    with:
      test_type: unit-test
#      codecov_flags: unittests
#      codecov_name: smoothcrawler-cluster_github-actions_test # optional

#  unit-test-codecov:
#    needs: [unit-test]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Download code coverage result file
#        uses: actions/download-artifact@v3
#        with:
#          name: coverage
#          path: ./unit-test_coverage_report/
#
#      - name: Setup Python 3.10 in Ubuntu OS
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.10'
#
#      - name: Install Python tool 'coverage'
#        run: |
#          python3 -m pip install --upgrade pip
#          pip3 install -U pip
#          pip3 install coverage
#          pip3 install codecov
#
#      - name: Combine all code coverage result files
#        run: coverage combine ./unit-test_coverage_report/.coverage.*
#
#      - name: Report testing coverage of project code
#        run: coverage report -m
#
#      - name: Generate testing coverage report of project code as XML file
#        run: coverage xml
#
#      - name: Upload testing coverage report
#        uses: actions/upload-artifact@v3
#        with:
#          name: project_coverage_report
#          path: coverage.xml
#          if-no-files-found: error


  codecov_finish:
#    name: Organize and generate the testing report and upload it to Codecov
    needs: [unit-test_codecov]
    uses: ./.github/workflows/upload_test_report_to_codecov.yaml
    secrets:
      codecov_token: ${{ secrets.CODECOV_TOKEN }}
    with:
      test_type: unit-test
      codecov_flags: unittests
      codecov_name: smoothcrawler-cluster_github-actions_test # optional

#    needs: unit-test-codecov
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download testing coverage report
#        uses: actions/download-artifact@v3
#        with:
#          name: project_coverage_report
##          path: coverage.xml
#          path: ./
#
#      # This usage be refer from https://about.codecov.io/blog/python-code-coverage-using-github-actions-and-codecov/
#      # Official document: https://github.com/marketplace/actions/codecov
#      # Issue: https://github.com/codecov/codecov-action/issues/598
#      - name: Upload testing coverage of project code to Codecov
#        uses: codecov/codecov-action@v2
##        run: |
##           codecov -n 'pre-release codecov' -e OS,PYTHON -F unit-tests -F  integration-tests -t ${{ secrets.CODECOV_TOKEN }} -v
#        with:
#          version: "v0.1.15"
#          name: pre-release codecov
#          token: ${{ secrets.CODECOV_TOKEN }}   # The token of project SmoothCrawler in codecov
#          flags: unit-tests, integration-tests    # optional
#          files: coverage.xml
#          env_vars: OS,PYTHON
#          fail_ci_if_error: true   # optional (default = false)
#          verbose: true    # optional (default = false)


  codacy_finish:
#    name: Upload test report to Codacy to analyse and record code quality
    needs: [unit-test_codecov]
    uses: ./.github/workflows/upload_code_report_to_codacy.yaml
    secrets:
      codacy_token: ${{ secrets.CODACY_PROJECT_TOKEN }}
    with:
      download_path: ./


  pre-building_check:
    needs: [codecov_finish, codacy_finish]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python 3.10 in Ubuntu OS
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -U pip
          pip3 install -U setuptools
          pip3 install wheel
          pip3 install requests
          pip3 install bs4

      - name: Install SmoothCrawler with by setup.py
        run: |
          python3 setup.py install --user || exit 1

      - name: Show the Python package information
        run: pip3 show smoothcrawler

      - name: Test to run script with package 'smoothcrawler' in command lines
        run: |
          import smoothcrawler as mr
          from smoothcrawler.crawler import SimpleCrawler
          from smoothcrawler.components.data import BaseHTTPResponseParser, BaseDataHandler
        shell: python

      - name: Test to run script with package 'smoothcrawler' with Python file
        run: python3 ./scripts/test_crawler.py
