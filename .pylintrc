[tool.pylint.main]
analyse-fallback-blocks = false

confidence = ["HIGH", "CONTROL_FLOW", "INFERENCE", "INFERENCE_FAILURE", "UNDEFINED"]

#### Disable the message, report, category or checker with the given id(s). You can either
# give multiple identifiers separated by comma (,) or put this option multiple times (only
# on the command line, not in the configuration file where it should appear only once). You
# can also use "--disable=all" to disable everything first and then re-enable specific checks.
# For example, if you want to run only the similarities checker, you can use "--disable=all --enable=similarities".
# If you want to run only the classes checker, but have no Warning level messages displayed, use "--disable=all --enable=classes --disable=W".
# disable =
disable = no-self-use, \
               arguments-differ

# enable =

evaluation = "max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10))"

exit-zero = false

extension-pkg-allow-list = []

extension-pkg-whitelist = []

fail-on = []

fail-under = 10

from-stdin = false

#### Files or directories to be skipped. They should be base names, not paths.
ignore = ["CVS"]

#### Add files or directories matching the regex patterns to the ignore-list. The regex
# matches against paths and can be in Posix or Windows format.
#ignore-paths = []   # Default
ignore-paths = ["docs", "example", "study", "README.md"]

#### Files or directories matching the regex patterns are skipped. The regex matches
# against base names, not paths. The default value ignores Emacs file locks
#ignore-patterns = ["^\\.#"]   # Default
ignore-patterns = ["^\\.#", "appintegration/*__init__.py"]

#### List of module names for which member attributes should not be checked (useful for
# modules/projects where namespaces are manipulated during runtime and thus existing
# member attributes cannot be deduced by static analysis). It supports qualified module
# names, as well as Unix pattern matching.
ignored-modules = []

jobs = 1

limit-inference-results = 100

load-plugins = []

msg-template = ""

# output-format =

persistent = true

#### Minimum Python version to use for version dependent checks. Will default to the version used to run pylint.
#py-version = [3, 8]
py-version = [3, 6]

#### Discover python modules and packages in the file system subtree.
#recursive = false
recursive = true

reports = false

score = true

suggestion-mode = true

unsafe-load-any-extension = false


[tool.pylint.basic]
argument-naming-style = "snake_case"

# argument-rgx =

attr-naming-style = "snake_case"

# attr-rgx =

bad-names = ["foo", "bar", "baz", "toto", "tutu", "tata"]

bad-names-rgxs = []

class-attribute-naming-style = "any"

# class-attribute-rgx =

class-const-naming-style = "UPPER_CASE"

# class-const-rgx =

class-naming-style = "PascalCase"

# class-rgx =

const-naming-style = "UPPER_CASE"

# const-rgx =

docstring-min-length = -1

function-naming-style = "snake_case"

# function-rgx =

good-names = ["i", "j", "k", "ex", "Run", "_"]

good-names-rgxs = []

include-naming-hint = false

inlinevar-naming-style = "any"

# inlinevar-rgx =

method-naming-style = "snake_case"

# method-rgx =

module-naming-style = "snake_case"

# module-rgx =

name-group = []

no-docstring-rgx = "^_"

property-classes = ["abc.abstractproperty"]

# typevar-rgx =

variable-naming-style = "snake_case"

# variable-rgx =


[tool.pylint.design]
exclude-too-few-public-methods = []

ignored-parents = []

max-args = 5

max-attributes = 7

max-bool-expr = 5

max-branches = 12

max-complexity = 10

max-locals = 15

max-parents = 7

max-public-methods = 20

max-returns = 6

max-statements = 50

min-public-methods = 2


[tool.pylint.exceptions]
overgeneral-exceptions = ["BaseException", "Exception"]


[tool.pylint.format]
expected-line-ending-format = ""

ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"

indent-after-paren = 4

indent-string = "    "

max-line-length = 100

max-module-lines = 1000

single-line-class-stmt = false

single-line-if-stmt = false


[tool.pylint.imports]
allow-any-import-level = []

allow-wildcard-with-all = false

deprecated-modules = []

ext-import-graph = ""

import-graph = ""

int-import-graph = ""

known-standard-library = []

known-third-party = ["enchant"]

preferred-modules = []


[tool.pylint.logging]
logging-format-style = "old"

logging-modules = ["logging"]


[tool.pylint.miscellaneous]
notes = ["FIXME", "XXX", "TODO"]

notes-rgx = ""


[tool.pylint.refactoring]
max-nested-blocks = 5

never-returning-functions = ["sys.exit", "argparse.parse_error"]


[tool.pylint.similarities]
ignore-comments = true

ignore-docstrings = true

ignore-imports = true

ignore-signatures = true

min-similarity-lines = 4


[tool.pylint.spelling]
max-spelling-suggestions = 4

spelling-dict = ""

spelling-ignore-comment-directives = "fmt: on,fmt: off,noqa:,noqa,nosec,isort:skip,mypy:"

spelling-ignore-words = ""

spelling-private-dict-file = ""

spelling-store-unknown-words = false


[tool.pylint.string]
check-quote-consistency = false

check-str-concat-over-line-jumps = false


[tool.pylint.typecheck]
contextmanager-decorators = ["contextlib.contextmanager"]

generated-members = []

ignore-mixin-members = true

ignore-none = true

ignore-on-opaque-inference = true

ignored-checks-for-mixins = ["no-member", "not-async-context-manager", "not-context-manager", "attribute-defined-outside-init"]

ignored-classes = ["optparse.Values", "thread._local", "_thread._local", "argparse.Namespace"]

missing-member-hint = true

missing-member-hint-distance = 1

missing-member-max-choices = 1

mixin-class-rgx = ".*[Mm]ixin"

signature-mutators = []


[tool.pylint.variables]
additional-builtins = []

allow-global-unused-variables = true

allowed-redefined-builtins = []

callbacks = ["cb_", "_cb"]

dummy-variables-rgx = "_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_"

ignored-argument-names = "_.*|^ignored_|^unused_"

init-import = false

redefining-builtins-modules = ["six.moves", "past.builtins", "future.builtins", "builtins", "io"]


[tool.pylint.broad_try_clause]
max-try-statements = 1


[tool.pylint.code_style]
max-line-length-suggestions = 0


[tool.pylint.deprecated_builtins]
bad-functions = ["map", "filter"]


[tool.pylint.parameter_documentation]
accept-no-param-doc = true

accept-no-raise-doc = true

accept-no-return-doc = true

accept-no-yields-doc = true

default-docstring-type = "default"


[tool.pylint.typing]
runtime-typing = true
